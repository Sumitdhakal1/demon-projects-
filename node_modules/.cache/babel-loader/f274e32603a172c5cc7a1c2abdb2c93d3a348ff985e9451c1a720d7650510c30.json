{"ast":null,"code":"var _jsxFileName = \"/Users/sumit/practice-resturant/src/components/topbar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport \"../style/topbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Topbar = _ref => {\n  _s();\n  let {\n    setOpenNav\n  } = _ref;\n  const [isMobile, setIsMobile] = useState(false);\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768); // Set the threshold value based on your requirements\n    };\n\n    // Set the initial value\n    setIsMobile(window.innerWidth <= 768); // Set the threshold value based on your requirements\n\n    window.addEventListener(\"resize\", handleResize);\n\n    // Clean up the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nav\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"assets/logo.png.webp\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), isMobile ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"open-button\",\n        onClick: () => setOpenNav(true),\n        children: /*#__PURE__*/_jsxDEV(GiHamburgerMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \" home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \" home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \" home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \" home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Topbar, \"0VTTNJATKABQPGLm9RVT0tKGUgU=\");\n_c = Topbar;\nexport default Topbar;\nvar _c;\n$RefreshReg$(_c, \"Topbar\");","map":{"version":3,"names":["React","useEffect","useState","Link","GiHamburgerMenu","jsxDEV","_jsxDEV","Topbar","_ref","_s","setOpenNav","isMobile","setIsMobile","handleResize","window","innerWidth","addEventListener","removeEventListener","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","_c","$RefreshReg$"],"sources":["/Users/sumit/practice-resturant/src/components/topbar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport \"../style/topbar.css\"\nconst Topbar = ({setOpenNav}) => {\n    const [isMobile, setIsMobile] = useState(false);\n    useEffect(() => {\n        const handleResize = () => {\n            setIsMobile(window.innerWidth <= 768); // Set the threshold value based on your requirements\n        };\n\n        // Set the initial value\n        setIsMobile(window.innerWidth <= 768); // Set the threshold value based on your requirements\n\n        window.addEventListener(\"resize\", handleResize);\n\n        // Clean up the event listener on component unmount\n        return () => {\n            window.removeEventListener(\"resize\", handleResize);\n        };\n    }, []);\n    return (\n        <div className=\"nav\">\n            <div className=\"container\">\n                <div className=\"image\">\n                    <img src=\"assets/logo.png.webp\" alt=\"\" />\n                </div>\n                {isMobile ? (\n                    <button className=\"open-button\" onClick={() => setOpenNav(true)}>\n                        <GiHamburgerMenu />\n                    </button>\n                ) : (\n                    <div className=\"navbar\">\n                        <Link to=\"/\"> home</Link>\n                        <Link to=\"/\"> home</Link>\n                        <Link to=\"/\"> home</Link>\n                        <Link to=\"/\"> home</Link>\n                    </div>)}\n        </div>\n        </div> \n    );\n};\n\nexport default Topbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}